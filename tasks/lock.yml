# SPDX-License-Identifier: MIT-0
---

- name: Determine the display manager
  ansible.builtin.stat:
    path: /etc/systemd/system/display-manager.service
    follow: false
  register: display_manager_symlink_result
  ignore_errors: true
  when:
    - controls_lockable
    - ansible_service_mgr == 'systemd'
  tags:
    - lock

- name: Lock (ly and slock)
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: |
      set -o pipefail
      XAUTHORITY={{ ansible_env.XDG_RUNTIME_DIR }}/lyxauth DISPLAY={{ controls_xdisplay }} nohup slock > /dev/null 2>&1 &
  when:
    - controls_lockable
    - controls_lock_with_slock
    - ansible_service_mgr == 'systemd'
    - display_manager_symlink_result.stat.islnk
    - display_manager_symlink_result.stat.lnk_source == "/usr/lib/systemd/system/ly.service"
  tags:
    - lock

- name: Lock (sddm and slock)
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: |
      set -o pipefail
      XAUTHORITY={{ ansible_env.XDG_RUNTIME_DIR }}/sddm/Xauthority DISPLAY={{ controls_xdisplay }} nohup slock > /dev/null 2>&1 &
  when:
    - controls_lockable
    - controls_lock_with_slock
    - ansible_service_mgr == 'systemd'
    - display_manager_symlink_result.stat.islnk
    - display_manager_symlink_result.stat.lnk_source == "/usr/lib/systemd/system/sddm.service"
  tags:
    - lock

- name: Lock (gdm and slock)
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: |
      set -o pipefail
      XAUTHORITY={{ ansible_env.XDG_RUNTIME_DIR }}/gdm/Xauthority DISPLAY={{ controls_xdisplay }} nohup slock > /dev/null 2>&1 &
  when:
    - controls_lockable
    - controls_lock_with_slock
    - ansible_service_mgr == 'systemd'
    - display_manager_symlink_result.stat.islnk
    - display_manager_symlink_result.stat.lnk_source == "/usr/lib/systemd/system/gdm.service"
  tags:
    - lock

- name: Lock (slock, no systemd)
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: |
      set -o pipefail
      case "$XDG_CURRENT_DESKTOP" in
      "GNOME")
        XAUTHORITY={{ ansible_env.XDG_RUNTIME_DIR }}/gdm/Xauthority DISPLAY={{ controls_xdisplay }} nohup slock > /dev/null 2>&1 &
        ;;
      "KDE")
        # TODO: untested
        XAUTHORITY={{ ansible_env.XDG_RUNTIME_DIR }}/sddm/Xauthority DISPLAY={{ controls_xdisplay }} nohup slock > /dev/null 2>&1 &
        ;;
      "XFCE")
        # TODO: untested
        XAUTHORITY={{ ansible_user_dir }}/.Xauthority DISPLAY={{ controls_xdisplay }} nohup slock > /dev/null 2>&1 &
        ;;
      "LXDE")
        # TODO: untested
        XAUTHORITY={{ ansible_user_dir }}/.Xauthority DISPLAY={{ controls_xdisplay }} nohup slock > /dev/null 2>&1 &
        ;;
      "MATE")
        XAUTHORITY={{ ansible_user_dir }}/.Xauthority DISPLAY={{ controls_xdisplay }} nohup slock > /dev/null 2>&1 &
        ;;
      "Cinnamon")
        # TODO: untested
        XAUTHORITY={{ ansible_user_dir }}/.Xauthority DISPLAY={{ controls_xdisplay }} nohup slock > /dev/null 2>&1 &
        ;;
      *)
        # Code for unknown desktop environment, assumes the ly display manager is used
        XAUTHORITY={{ ansible_env.XDG_RUNTIME_DIR }}/lyxauth DISPLAY={{ controls_xdisplay }} nohup slock > /dev/null 2>&1 &
        ;;
      esac
  when:
    - controls_lockable
    - controls_lock_with_slock
    - ansible_service_mgr != 'systemd'
    - ansible_env.XDG_RUNTIME_DIR is defined
  tags:
    - lock

- name: Lock (systemd)
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: |
      set -o pipefail
      loginctl lock-session $(loginctl list-sessions --no-legend  | grep -i seat | awk '{ print $1 }')
  when:
    - controls_lockable
    - not controls_lock_with_slock
    - ansible_service_mgr == 'systemd'
  tags:
    - lock

# # untested - on Pop!_OS 22.04, ~/.Xauthority exists and is not a symlink to
# # $XDG_RUNTIME_DIR unlike the above commands
# - name: lock (slock and sddm)
#   ansible.builtin.shell:
#     cmd: "XAUTHORITY={{ ansible_user_dir }}/.Xauthority DISPLAY={{ controls_xdisplay }} nohup slock > /dev/null 2>&1 &"
#     executable: /bin/bash
